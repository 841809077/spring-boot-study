<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.study.spring.mapper.NovelMapper">

    <!-- 定义的resultMap，可以解决类的属性名和数据库列名不一致的问题-->
    <!-- property值为实体类属性，column值为数据库表字段 -->
    <resultMap type="NovelEntity" id="getDownloadList">
        <result property="novel_author" column="novelauthor"/>
    </resultMap>

    <!-- 根据来源查询数据 -->
    <select id="findMaxId" resultType="Integer">
        select
           max(id) maxId
        from
           novel_type
    </select>

    <!--    resultType="com.study.spring.entity.NovelEntity"-->
    <select id="getDownloadList" resultMap="getDownloadList" parameterType="hashmap">
        select
        id, download, introduce, novelauthor, novelname, type
        from
        novel_type
        <where>
            <if test="query.dl != null and query.dl != ''">
                download = #{query.dl}
            </if>
            <if test="query.nu != null and query.nu != ''">
                and novelauthor = #{query.nu}
            </if>
        </where>
    </select>

    <!--    if标签内的判断条件是NovelEntity里面的属性，而不是表字段-->
    <insert id="saveNovel" parameterType="com.study.spring.entity.NovelEntity">
        insert into novel_type(
        download
        <if test="introduce != null and introduce != ''">
            ,introduce
        </if>
        <if test="novel_author !=null and novel_author != ''">
            ,novelauthor
        </if>
        <if test="novelName != null and novelName != ''">
            ,novelname
        </if>
        <if test="type != null and type != ''">
            ,type
        </if>
        )
        values (
        #{download}
        <if test="introduce != null and introduce != ''">
            ,#{introduce}
        </if>
        <if test="novel_author !=null and novel_author != ''">
            ,#{novel_author}
        </if>
        <if test="novelName != null and novelName != ''">
            ,#{novelName}
        </if>
        <if test="type != null and type != ''">
            ,#{type}
        </if>
        )

    </insert>

    <update id="updateNovelByName" parameterType="com.study.spring.entity.NovelEntity">
        update novel_type
        <set>
            <if test="download != null and download != ''">
                download = #{download},
            </if>
            <if test="introduce != null and introduce != ''">
                introduce = #{introduce},
            </if>
            <if test="novel_author !=null and novel_author != ''">
                novelauthor = #{novel_author},
            </if>
            <if test="type != null and type != ''">
                type = #{type}
            </if>
        </set>
        where
        novelName = #{novelName}
    </update>

    <delete id="deleteNoveBy" parameterType="com.study.spring.entity.NovelEntity">
        DELETE FROM novel_type
        <where>
            <if test="download != null and download != ''">
                download = #{download}
            </if>
            <if test="introduce != null and introduce != ''">
                and introduce = #{introduce}
            </if>
            <if test="novel_author !=null and novel_author != ''">
                and novelauthor = #{novel_author}
            </if>
            <if test="type != null and type != ''">
                and type = #{type}
            </if>
            <if test="novelName != null and novelName != ''">
                and novelName = #{novelName}
            </if>
        </where>
    </delete>

</mapper>
